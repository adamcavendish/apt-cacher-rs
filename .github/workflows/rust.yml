name: Rust

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    permissions:
      contents: read

    name: Rust Build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: sudo apt-get install -y sqlite3

    - name: Setup development database
      run: sqlite3 apt-cacher-rs.db < db.sqlite

    - name: Build (default features)
      run: cargo build --verbose
      env:
          RUSTFLAGS: '-D warnings'

    - name: Build (tls_rustls feature)
      run: cargo build --verbose --features tls_rustls
      env:
          RUSTFLAGS: '-D warnings'

    - name: Format
      run: cargo fmt --all --check

    - name: Clippy (default features)
      run: cargo clippy --all-targets -- -D warnings -D clippy::pedantic

    - name: Clippy (all features)
      run: cargo clippy --all-targets --all-features -- -D warnings -D clippy::pedantic

    - name: Run tests
      run: cargo test --verbose

  spaces-check:

    permissions:
      contents: read

    name: Spaces Check
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Spaces check
        run: git diff-tree --check $(git hash-object -t tree /dev/null) HEAD

  spellings:

    permissions:
      contents: read

    name: Codespell
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install codespell
        run: sudo apt-get install -y codespell

      - name: Run codespell
        run: codespell -L crate src/ apt-cacher-rs.conf apt-cacher-rs.init apt-cacher-rs.service README.md
